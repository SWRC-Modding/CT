	//Overrides
	virtual void CheckHearSound(class AActor*, class USound*, int);
	virtual int* GetOptimizedRepList(unsigned char*, struct FPropertyRetirement*, int*, class UPackageMap*, class UActorChannel*);
	virtual class AActor* GetViewTarget();
	virtual int IsAPlayerController();
	virtual int IsNetRelevantFor(class APlayerController*, class AActor*, const FVector&);
	virtual int LocalPlayerController();
	virtual void PostRender(class FSceneNode*);
	virtual void PostScriptDestroyed();
	virtual void SetAnchor(class ANavigationPoint*);
	virtual void Spawned();
	virtual int StopAtLedge();
	virtual int Tick(float, enum ELevelTick);
	virtual int WantsLedgeCheck();

	// Events
	void NoHelmetInit();
	void X_ClientValidate(const FString& C);
	void X_ServerValidationResponse(const FString& R);
	void ClientValidate(const FString& C);
	void ServerValidationResponse(const FString& R);
	void X_ClientHearSound(class AActor* Actor, class USound* S, const FVector& SoundLocation, INT Flags);
	void ClientHearSound(class AActor* Actor, class USound* S, const FVector& SoundLocation, INT Flags);
	void KickWarning();
	void ClientSetViewTarget(class AActor* A);
	void InitInputSystem();
	void ViewFlash(FLOAT DeltaTime);
	void ReceiveLocalizedMessage(class UClass* Message, INT Switch, class APlayerReplicationInfo* RelatedPRI_1, class APlayerReplicationInfo* RelatedPRI_2, class UObject* OptionalObject);
	void ClientMessage(const FString& S, FName Type);
	void TeamMessage(class APlayerReplicationInfo* PRI, const FString& S, FName Type);
	void PreClientTravel();
	void SendClientAdjustment();
	void ViewShake(FLOAT DeltaTime);
	void LoadMostRecent();
	void ShowMenu(const FString& MenuClass, const FString& Title, const FString& Text, const FString& PicName, const FString& NewLevel);
	void UpdateName(const FString& newName);
	void SetProgressMessage(INT Index, const FString& S, const FColor& C);
	void SetProgressTime(FLOAT T);
	void PlayerTick(FLOAT DeltaTime);
	void AddCameraEffect(class UCameraEffect* NewEffect, UBOOL RemoveExisting);
	void RemoveCameraEffect(class UCameraEffect* ExEffect);
	void PlayerCalcView(class AActor*& ViewActor, FVector& CameraLocation, FRotator& CameraRotation);
	void UpdateRotation(FLOAT DeltaTime, FLOAT MaxPitch);
	void ClientSetBadCDKey(UBOOL bSet);
	void ClientSetMissingContent(UBOOL bSet, const FString& ContentName);
	void ClientOpenMenu(const FString& Menu, UBOOL bDisconnect, const FString& Msg1, const FString& Msg2);
	void ClientOpenXMenu(const FString& Menu, UBOOL bDisconnect, const FString& Msg1, const FString& Msg2);
	void ClientShowSingularMenu(const FString& Menu, const FString& Args);
	void ClientCloseMenu(UBOOL bCloseAll, UBOOL bCancel);
	void ClientCloseXMenu(UBOOL bCloseAll, UBOOL bCancel);
	void ServerChangeVoiceChatter(class APlayerController* Player, FXboxAddr const& xbAddr, INT Handle, INT VoiceChannels, UBOOL Add);
	void ServerChangeHasVoice(UBOOL bVoiceOn);
	void ServerGetVoiceChatters(class APlayerController* Player);
	void StartClientDemoRec();
	void MenuOpen(class UClass* MenuClass, const FString& Args);
	void MenuClose();
	void PotentialSubtitledSoundPlayed(const FString& SoundName, FLOAT Duration, INT Priority);
	UBOOL InTacticalVisionMode();
	void CheckpointSaveStarted();

	//Functions
	INT GetNumFriendRequests();
	void SetNumFriendRequests(INT Num);
	INT GetNumGameInvites();
	void SetNumGameInvites(INT Num);
	INT GetLastNumFriendRequests();
	void SetLastNumFriendRequests(INT Num);
	INT GetLastNumGameInvites();
	void SetLastNumGameInvites(INT Num);
	FLOAT GetFriendRequestTimeout();
	void SetFriendRequestTimeout(FLOAT Timeout);
	FLOAT GetGameInviteTimeout();
	void SetGameInviteTimeout(FLOAT Timeout);
	FLOAT GetNextMatchmakingQueryTime();
	void SetNextMatchmakingQueryTime(FLOAT Time);
	void SetLevelProgress(const FString& Level);
	UBOOL HasReachedLevel(const FString& Level);
	INT GetLevelIndex(const FString& Level);
	int GetDesireType(class AActor*);
	void SetNetSpeed(int);
	void SetPlayer(class UPlayer*);
