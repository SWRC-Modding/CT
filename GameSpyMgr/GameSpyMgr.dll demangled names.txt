public: GameSpyCDKeyResponseInterface::GameSpyCDKeyResponseInterface(const class GameSpyCDKeyResponseInterface&)
public: GameSpyCDKeyResponseInterface::GameSpyCDKeyResponseInterface()
protected: GameSpyMgr::GameSpyMgr()
public: GameSpyMgr::GameSpyMgr(const class GameSpyMgr&)
public: GameSpyMgr::GameSpyMgr(class UEngine*, int)
public: GameSpyCDKeyResponseInterface::~GameSpyCDKeyResponseInterface()
public: GameSpyMgr::~GameSpyMgr()
public: class GameSpyCDKeyResponseInterface& GameSpyCDKeyResponseInterface::operator=(const class GameSpyCDKeyResponseInterface&)
public: class GameSpyMgr & GameSpyMgr::operator=(const class GameSpyMgr&)
public: void GameSpyMgr::AuthCDKey(int, unsigned int, FString, FString)
public: void GameSpyMgr::BeginServerQuery()
public: static void __cdecl GameSpyMgr::CDAuthCallback(int, int, int, char*, void*)
public: void GameSpyMgr::CancelServerQuery()
public: void GameSpyMgr::ClearServerQueryResults()
public: BOOL GameSpyMgr::CreateServerBrowser()
public: void GameSpyMgr::DeleteServerBrowser()
public: int GameSpyMgr::Exec(const char*, class FOutputDevice&)
public: class FString GameSpyMgr::GetExtPlayerQueryResult(int, int)
public: class FString GameSpyMgr::GetExtServerQueryResult(int)
public: int GameSpyMgr::GetLocalID()
public: virtual void GameSpyCDKeyResponseInterface::GetResponse(char*, char*, char*)
public: int GameSpyMgr::GetServerQueryNumResults() const
public: class FString GameSpyMgr::GetServerQueryResult(int, int)
public: BOOL GameSpyMgr::IsBackEndAvailable()
public: void GameSpyMgr::RegisterCustomKeys()
public: BOOL GameSpyMgr::RegisterGame(int)
public: void GameSpyMgr::ReleaseAllCDKey()
public: void GameSpyMgr::ReleaseCDKey(int)
public: static void __cdecl GameSpyMgr::SBCallback(struct _ServerBrowser*, enum SBCallbackReason, struct _SBServer*, void*)
public: void __cdecl GameSpyMgr::SetUplinkCB(void(__cdecl*)(int, BOOL, void*), void*)
public: void GameSpyMgr::Tick(float)
public: void GameSpyMgr::UnRegisterGame()
public: void GameSpyMgr::UpdateState()
public: static void __cdecl GameSpyMgr::adderror_callback(enum qr2_error_t, char*, void*)
public: static void __cdecl GameSpyMgr::cm_callback(char*, int, void*)
public: static int __cdecl GameSpyMgr::count_callback(enum qr2_key_type, void*)
public: static void __cdecl GameSpyMgr::keylist_callback(enum qr2_key_type, struct qr2_keybuffer_s*, void*)
public: static void __cdecl GameSpyMgr::nn_callback(int, void*)
public: static void __cdecl GameSpyMgr::playerkey_callback(int, int, struct qr2_buffer_s*, void*)
public: static void __cdecl GameSpyMgr::serverkey_callback(int, struct qr2_buffer_s*, void*)
public: static void __cdecl GameSpyMgr::teamkey_callback(int, int, struct qr2_buffer_s*, void*)
