/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/

#ifndef XGAME_NATIVE_DEFS
#define XGAME_NATIVE_DEFS

#include "../../Core/Inc/Core.h"

#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef XGAME_API
#define XGAME_API DLL_IMPORT
LINK_LIB(XGame)
#endif

/*
 * DumpGameListCommandlet
 */

class XGAME_API UDumpGameListCommandlet : public UCommandlet{
public:
	DECLARE_CLASS(UDumpGameListCommandlet,UCommandlet,CLASS_Transient,XGame)
	NO_DEFAULT_CONSTRUCTOR(UDumpGameListCommandlet)
};

/*
 * DumpMapListCommandlet
 */

class XGAME_API UDumpMapListCommandlet : public UCommandlet{
public:
	DECLARE_CLASS(UDumpMapListCommandlet,UCommandlet,CLASS_Transient,XGame)
	NO_DEFAULT_CONSTRUCTOR(UDumpMapListCommandlet)
};

/*
 * DumpMutatorListCommandlet
 */

class XGAME_API UDumpMutatorListCommandlet : public UCommandlet{
public:
	DECLARE_CLASS(UDumpMutatorListCommandlet,UCommandlet,CLASS_Transient,XGame)
	NO_DEFAULT_CONSTRUCTOR(UDumpMutatorListCommandlet)
};

/*
 * DumpWeaponListCommandlet
 */

class XGAME_API UDumpWeaponListCommandlet : public UCommandlet{
public:
	DECLARE_CLASS(UDumpWeaponListCommandlet,UCommandlet,CLASS_Transient,XGame)
	NO_DEFAULT_CONSTRUCTOR(UDumpWeaponListCommandlet)
};

/*
 * DecoText
 */

class XGAME_API UDecoText : public UObject{
public:
	FStringNoInit TextName;
	TArrayNoInit<FString> Rows;

	DECLARE_CLASS(UDecoText,UObject,0,XGame)
	NO_DEFAULT_CONSTRUCTOR(UDecoText)
};

/*
 * xUtil
 */

struct FGameTypeRecord{
	FStringNoInit GameName;
	FStringNoInit ClassName;
	FStringNoInit MapPrefix;
	FStringNoInit Acronym;
	FStringNoInit MapListType;
	FStringNoInit ScreenShotName;
	class UMaterial* Screenshot;
	FStringNoInit DecoTextName;
	INT DefaultGoalScore;
	INT MinGoalScore;
	INT DefaultTimeLimit;
	INT DefaultRemainingRounds;
	INT bTeamGame;
};

struct FMapRecord{
	FStringNoInit LongName;
	FStringNoInit ScreenShotName;
	class UMaterial* Screenshot;
	FStringNoInit TextName;
	FStringNoInit Filename;
	INT IdealPlayerCountMin;
	INT IdealPlayerCountMax;
	INT GoalScore;
	INT TimeLimit;
	INT FragLimit;
	INT MapIndex;
	FStringNoInit SupportedGames;
	BYTE bSplitScreenOK;
	BYTE bNetworkOK;
};

struct FWeaponRecord{
	FStringNoInit WeaponClassName;
	FStringNoInit FriendlyName;
	FStringNoInit AttachmentMeshName;
	FLOAT AttachmentDrawScale;
	FStringNoInit PickupMeshName;
	BYTE Priority;
	BYTE ExchangeFireModes;
};

struct FMutatorRecord{
	FStringNoInit ClassName;
	class UClass* MutClass;
	FStringNoInit IconMaterialName;
	class UMaterial* IconMaterial;
	FStringNoInit ConfigMenuClassName;
	FStringNoInit GroupName;
	INT SinglePlayerOnly;
	INT OnByDefault;
	FStringNoInit FriendlyName;
	FStringNoInit Description;
	BYTE bActivated;
};

struct FPlayerRecord{
	FStringNoInit DefaultName;
	FStringNoInit MeshName;
	FStringNoInit BodySkinName;
	FStringNoInit FaceSkinName;
	FStringNoInit SoundGroupClassName;
	FStringNoInit GibGroupClassName;
	FStringNoInit PortraitName;
	class UMaterial* Portrait;
	FStringNoInit TextName;
	FStringNoInit ClassName;
	FStringNoInit SkeletonMeshName;
	INT Source;
	FStringNoInit VoiceClassName;
	INT RecordIndex;
	BYTE bLoaded;
};

class XGAME_API UxUtil : public UObject{
public:
	TArrayNoInit<FString> DamagedContentNames;

	DECLARE_CLASS(UxUtil,UObject,0,XGame)
	NO_DEFAULT_CONSTRUCTOR(UxUtil)
};

/*
 * CacheGameTypes
 */

class XGAME_API UCacheGameTypes : public UxUtil{
public:
	TArrayNoInit<FGameTypeRecord> Records;

	DECLARE_CLASS(UCacheGameTypes,UxUtil,0,XGame)
	NO_DEFAULT_CONSTRUCTOR(UCacheGameTypes)
};

/*
 * CacheMaps
 */

class XGAME_API UCacheMaps : public UxUtil{
public:
	TArrayNoInit<FMapRecord> Records;

	DECLARE_CLASS(UCacheMaps,UxUtil,0,XGame)
	NO_DEFAULT_CONSTRUCTOR(UCacheMaps)
};

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif

#endif // XGAME_NATIVE_DEFS
